// Generated by view binder compiler. Do not edit!
package com.example.muvkintours.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.muvkintours.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMealBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView meal;

  @NonNull
  public final TextView mealText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recView;

  @NonNull
  public final MaterialButton showSavedMeals;

  private ActivityMealBinding(@NonNull RelativeLayout rootView, @NonNull TextView meal,
      @NonNull TextView mealText, @NonNull ProgressBar progressBar, @NonNull RecyclerView recView,
      @NonNull MaterialButton showSavedMeals) {
    this.rootView = rootView;
    this.meal = meal;
    this.mealText = mealText;
    this.progressBar = progressBar;
    this.recView = recView;
    this.showSavedMeals = showSavedMeals;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.meal;
      TextView meal = ViewBindings.findChildViewById(rootView, id);
      if (meal == null) {
        break missingId;
      }

      id = R.id.mealText;
      TextView mealText = ViewBindings.findChildViewById(rootView, id);
      if (mealText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recView;
      RecyclerView recView = ViewBindings.findChildViewById(rootView, id);
      if (recView == null) {
        break missingId;
      }

      id = R.id.showSavedMeals;
      MaterialButton showSavedMeals = ViewBindings.findChildViewById(rootView, id);
      if (showSavedMeals == null) {
        break missingId;
      }

      return new ActivityMealBinding((RelativeLayout) rootView, meal, mealText, progressBar,
          recView, showSavedMeals);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
